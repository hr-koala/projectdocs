import{_ as n,o as s,c as a,e}from"./app-lzSeYDl-.js";const t={},p=e(`<h1 id="sortable" tabindex="-1"><a class="header-anchor" href="#sortable" aria-hidden="true">#</a> Sortable</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> sortable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sortable</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">group</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// or { name: &quot;...&quot;, pull: [true, false, &#39;clone&#39;, array], put: [true, false, array] }</span>
    <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// boolean 定义是否列表单元是否可以在列表容器内进行拖拽排序</span>
    <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// number 定义鼠标选中列表单元可以开始拖动的延迟时间；</span>
    <span class="token literal-property property">touchStartThreshold</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// px, how many pixels the point should move before cancelling a delayed drag event</span>
    <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// boolean 定义是否此sortable对象是否可用，为true时sortable对象不能拖放排序等功能，为false时为可以进行排序，相当于一个开关；</span>
    <span class="token literal-property property">store</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  <span class="token comment">// @see Store</span>
    <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>  <span class="token comment">// ms, number 单位：ms，定义排序动画的时间</span>
    <span class="token literal-property property">easing</span><span class="token operator">:</span> <span class="token string">&quot;cubic-bezier(1, 0, 0, 1)&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Easing for animation. Defaults to null. See https://easings.net/ for examples.</span>
    <span class="token literal-property property">handle</span><span class="token operator">:</span> <span class="token string">&quot;.my-handle&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 格式为简单css选择器的字符串，使列表单元中符合选择器的元素成为拖动的手柄，只有按住拖动手柄才能使列表单元进行拖动</span>
    <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">&quot;.ignore-elements&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 过滤器，不需要进行拖动的元素</span>
    <span class="token literal-property property">preventOnFilter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//  在触发过滤器\`filter\`的时候调用\`event.preventDefault()\`</span>
    <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token string">&quot;.item&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 允许拖拽的项目类名</span>
    <span class="token literal-property property">ghostClass</span><span class="token operator">:</span> <span class="token string">&quot;sortable-ghost&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// drop placeholder的css类名</span>
    <span class="token literal-property property">chosenClass</span><span class="token operator">:</span> <span class="token string">&quot;sortable-chosen&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 被选中项的css 类名</span>
    <span class="token literal-property property">dragClass</span><span class="token operator">:</span> <span class="token string">&quot;sortable-drag&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 正在被拖拽中的css类名</span>
    <span class="token literal-property property">dataIdAttr</span><span class="token operator">:</span> <span class="token string">&#39;data-id&#39;</span><span class="token punctuation">,</span>

    <span class="token literal-property property">swapThreshold</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// Threshold of the swap zone</span>
    <span class="token literal-property property">invertSwap</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Will always use inverted swap zone if set to true</span>
    <span class="token literal-property property">invertedSwapThreshold</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// Threshold of the inverted swap zone (will be set to swapThreshold value by default)</span>
    <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 拖拽方向 (默认情况下会自动判断方向)</span>

    <span class="token literal-property property">forceFallback</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 忽略 HTML5拖拽行为，强制回调进行</span>

    <span class="token literal-property property">fallbackClass</span><span class="token operator">:</span> <span class="token string">&quot;sortable-fallback&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 当使用forceFallback的时候，被复制的dom的css类名</span>
    <span class="token literal-property property">fallbackOnBody</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 将cloned DOM 元素挂到body元素上。</span>
    <span class="token literal-property property">fallbackTolerance</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// Specify in pixels how far the mouse should move before it&#39;s considered as a drag.</span>

    <span class="token literal-property property">scroll</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// or HTMLElement</span>
    <span class="token function-variable function">scrollFn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">offsetX<span class="token punctuation">,</span> offsetY<span class="token punctuation">,</span> originalEvent<span class="token punctuation">,</span> touchEvt<span class="token punctuation">,</span> hoverTargetEl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// if you have custom scrollbar scrollFn may be used for autoscrolling</span>
    <span class="token literal-property property">scrollSensitivity</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">// px, how near the mouse must be to an edge to start scrolling.</span>
    <span class="token literal-property property">scrollSpeed</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// px</span>
    <span class="token literal-property property">bubbleScroll</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// apply autoscroll to all parent elements, allowing for easier movement</span>

    <span class="token literal-property property">dragoverBubble</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">removeCloneOnHide</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Remove the clone element when it is not showing, rather than just hiding it</span>
    <span class="token literal-property property">emptyInsertThreshold</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// px, distance mouse must be from empty sortable to insert drag element into it</span>


    <span class="token function-variable function">setData</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/** DataTransfer */</span>dataTransfer<span class="token punctuation">,</span> <span class="token doc-comment comment">/** HTMLElement*/</span>dragEl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dataTransfer<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;Text&#39;</span><span class="token punctuation">,</span> dragEl<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \`dataTransfer\` object of HTML5 DragEvent</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 元素被选中</span>
    <span class="token function-variable function">onChoose</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        evt<span class="token punctuation">.</span>oldIndex<span class="token punctuation">;</span>  <span class="token comment">// element index within parent</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 元素未被选中的时候（从选中到未选中）</span>
    <span class="token function-variable function">onUnchoose</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// same properties as onEnd</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 开始拖拽的时候</span>
    <span class="token function-variable function">onStart</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        evt<span class="token punctuation">.</span>oldIndex<span class="token punctuation">;</span>  <span class="token comment">// element index within parent</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 结束拖拽</span>
    <span class="token function-variable function">onEnd</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> itemEl <span class="token operator">=</span> evt<span class="token punctuation">.</span>item<span class="token punctuation">;</span>  <span class="token comment">// dragged HTMLElement</span>
        evt<span class="token punctuation">.</span>to<span class="token punctuation">;</span>    <span class="token comment">// target list</span>
        evt<span class="token punctuation">.</span>from<span class="token punctuation">;</span>  <span class="token comment">// previous list</span>
        evt<span class="token punctuation">.</span>oldIndex<span class="token punctuation">;</span>  <span class="token comment">// element&#39;s old index within old parent</span>
        evt<span class="token punctuation">.</span>newIndex<span class="token punctuation">;</span>  <span class="token comment">// element&#39;s new index within new parent</span>
        evt<span class="token punctuation">.</span>clone <span class="token comment">// the clone element</span>
        evt<span class="token punctuation">.</span>pullMode<span class="token punctuation">;</span>  <span class="token comment">// when item is in another sortable: \`&quot;clone&quot;\` if cloning, \`true\` if moving</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 元素从一个列表拖拽到另一个列表</span>
    <span class="token function-variable function">onAdd</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// same properties as onEnd</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 列表内元素顺序更新的时候触发</span>
    <span class="token function-variable function">onUpdate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// same properties as onEnd</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 列表的任何更改都会触发</span>
    <span class="token function-variable function">onSort</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// same properties as onEnd</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 元素从列表中移除进入另一个列表</span>
    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// same properties as onEnd</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 试图拖拽一个filtered的元素</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> itemEl <span class="token operator">=</span> evt<span class="token punctuation">.</span>item<span class="token punctuation">;</span>  <span class="token comment">// HTMLElement receiving the \`mousedown|tapstart\` event.</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 拖拽移动的时候</span>
    <span class="token function-variable function">onMove</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">,</span> <span class="token doc-comment comment">/**Event*/</span>originalEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Example: https://jsbin.com/nawahef/edit?js,output</span>
        evt<span class="token punctuation">.</span>dragged<span class="token punctuation">;</span> <span class="token comment">// dragged HTMLElement</span>
        evt<span class="token punctuation">.</span>draggedRect<span class="token punctuation">;</span> <span class="token comment">// DOMRect {left, top, right, bottom}</span>
        evt<span class="token punctuation">.</span>related<span class="token punctuation">;</span> <span class="token comment">// HTMLElement on which have guided</span>
        evt<span class="token punctuation">.</span>relatedRect<span class="token punctuation">;</span> <span class="token comment">// DOMRect</span>
        evt<span class="token punctuation">.</span>willInsertAfter<span class="token punctuation">;</span> <span class="token comment">// Boolean that is true if Sortable will insert drag element after target by default</span>
        originalEvent<span class="token punctuation">.</span>clientY<span class="token punctuation">;</span> <span class="token comment">// mouse position</span>
        <span class="token comment">// return false; — for cancel</span>
        <span class="token comment">// return -1; — insert before target</span>
        <span class="token comment">// return 1; — insert after target</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// clone一个元素的时候触发</span>
    <span class="token function-variable function">onClone</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> origEl <span class="token operator">=</span> evt<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
        <span class="token keyword">var</span> cloneEl <span class="token operator">=</span> evt<span class="token punctuation">.</span>clone<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 拖拽元素改变位置的时候</span>
    <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token doc-comment comment">/**Event*/</span>evt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        evt<span class="token punctuation">.</span>newIndex <span class="token comment">// most likely why this event is used is to get the dragging element&#39;s current index</span>
        <span class="token comment">// same properties as onEnd</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>group：string or object</p><p>string：命名，个人建议用元素 id 就行,用处是为了设置可以拖放容器时使用，在 array 中的 put 的设置中再做介绍； object：{name,pull,put} name：同 string 的方法， pull：pull 用来定义从这个列表容器移动出去的设置，true/false/&#39;clone&#39;/function true:列表容器内的列表单元可以被移出； false：列表容器内的列表单元不可以被移出； &#39;clone&#39;：列表单元移出，移动的为该元素的副本； function：用来进行 pull 的函数判断，可以进行复杂逻辑，在函数中 return false/true 来判断是否移出； put：put 用来定义往这个列表容器放置列表单元的的设置，true/false/[&#39;foo&#39;,&#39;bar&#39;]/function true:列表容器可以从其他列表容器内放入列表单元； false：与 true 相反； [&#39;foo&#39;,&#39;bar&#39;]：这个可以是一个字符串或者是字符串的数组，代表的是 group 配置项里定义的 name 值； function：用来进行 put 的函数判断，可以进行复杂逻辑，在函数中 return false/true 来判断是否放入；</p></li><li><p>sort：boolean 定义是否列表单元是否可以在列表容器内进行拖拽排序；</p></li><li><p>delay：number 定义鼠标选中列表单元可以开始拖动的延迟时间；</p></li><li><p>disabled：boolean 定义是否此 sortable 对象是否可用，为 true 时 sortable 对象不能拖放排序等功能，为 false 时为可以进行排序，相当于一个开关；</p></li><li><p>animation：number 单位：ms，定义排序动画的时间；</p></li><li><p>handle：selector 格式为简单 css 选择器的字符串，使列表单元中符合选择器的元素成为拖动的手柄，只有按住拖动手柄才能使列表单元进行拖动；</p></li><li><p>filter：selector 格式为简单 css 选择器的字符串，定义哪些列表单元不能进行拖放，可设置为多个选择器，中间用“，”分隔；</p></li><li><p>draggable：selector 格式为简单 css 选择器的字符串，定义哪些列表单元可以进行拖放</p></li><li><p>ghostClass：selector 格式为简单 css 选择器的字符串，当拖动列表单元时会生成一个副本作为影子单元来模拟被拖动单元排序的情况，此配置项就是来给这个影子单元添加一个 class，我们可以通过这种方式来给影子元素进行编辑样式；</p></li><li><p>chosenClass：selector 格式为简单 css 选择器的字符串，当选中列表单元时会给该单元增加一个 class；</p></li><li><p>forceFallback：boolean 如果设置为 true 时，将不使用原生的 html5 的拖放，可以修改一些拖放中元素的样式等；</p></li><li><p>fallbackClass：string 当 forceFallback 设置为 true 时，拖放过程中鼠标附着单元的样式；</p></li><li><p>scroll：boolean 默认为 true，当排序的容器是个可滚动的区域，拖放可以引起区域滚动</p></li></ul><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h3><ul><li>onChoose：function 列表单元被选中的回调函数</li><li>onStart：function 列表单元拖动开始的回调函数</li><li>onEnd：function 列表单元拖放结束后的回调函数</li><li>onAdd：function 列表单元添加到本列表容器的回调函数</li><li>onUpdate：function 列表单元在列表容器中的排序发生变化后的回调函数</li><li>onRemove：function 列表元素移到另一个列表容器的回调函数</li><li>onFilter：function 试图选中一个被 filter 过滤的列表单元的回调函数</li><li>onMove：function 当移动列表单元在一个列表容器中或者多个列表容器中的回调函数</li><li>onClone：function 当创建一个列表单元副本的时候的回调函数</li></ul><h3 id="事件对象" tabindex="-1"><a class="header-anchor" href="#事件对象" aria-hidden="true">#</a> 事件对象</h3><p>事件对象在各个函数中略有不同，可通过输出对象查看对象的属性，下面简单列举几个：</p><ul><li>to：HTMLElement--移动到列表容器</li><li>from：HTMLElement--来源的列表容器</li><li>item：HTMLElement--被移动的列表单元</li><li>clone：HTMLElement--副本的列表单元</li><li>oldIndex：number/undefined--在列表容器中的原序号</li><li>newIndex：number/undefined--在列表容器中的新序号</li></ul><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h3><ul><li>option(name[,value]) 获得或者设置项参数，使用方法类似于 jQuery 用法，没有第二个参数为获得 option 中第一个参数所对应的值，有第二个参数时，将重新赋给第一个参数所对应的值；</li><li>closest 没理解</li><li>toArray() 序列化可排序的列表单元的 data-id（可通过配置项中 dataIdAttr 修改）放入一个数组，并返回这个数组中</li><li>sort() 通过自定义列表单元的 data-id 的数组对列表单元进行排序</li><li>save()</li><li>destroy()</li></ul>`,10),o=[p];function l(c,i){return s(),a("div",null,o)}const u=n(t,[["render",l],["__file","sortablejs.html.vue"]]);export{u as default};
